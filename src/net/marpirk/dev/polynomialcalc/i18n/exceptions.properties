#ParamParseException: beginning information
PARAM_PARSE_ERROR_IN_PARAM=Error in parameter
#ParamParseException: when operator character should be between polynomials
#Starting lowercase
PARAM_PARSE_OPERATOR_SHOULD_BE_BETWEEN=operator should be between polynomials
#ParamParseException: unexpected character in parameter
#Starting lowercase
PARAM_PARSE_WRONG_CHARACTER=wrong character
#ParamParseException: syntax error
#Starting lowercase
PARAM_PARSE_SYNTAX_ERROR=syntax error
#MonomialPowerMismatchException: getMessage()
MONOMIAL_POWER_MSG=Cannot make operation "{0}" on given monomials, because of {1}: {2}, {3}.
#MonomialPowerMismatchException: adding monomials with different powers
#Strating lowercase, see MONOMIAL_POWER_MSG {1}
MONOMIAL_POWER_REASON_ADD=different powers
#MonomialPowerMismatchException: dividing monomial with smaller power
#Strating lowercase, see MONOMIAL_POWER_MSG {1}
MONOMIAL_POWER_REASON_DIVIDE=bigger power of second monomial
#DivisionByZeroFractionException: getMessage()
#{0} numerator
#{1} denominator
DIVISION_BY_0_FRACTION=Division by 0 in fraction ( {0} ) / 0
#CannotPerformOperationFractionException: main msg - see getMessage()
#{0} is operation on fraction which cannot be performed
#{1} is fraction
#{2} is reason
CANNOT_PERFORM_OP_FRACTION_MSG=Cannot {0} fraction: {2}, because {1}.
#CannotPerformOperationFractionException: getting exact value of fraction
#Starting lowercase - see CANNOT_PERFORM_OP_FRACTION_MSG
CPOF_NOT_NUMBER_FRACTION_OP=return exact value of
#CannotPerformOperationFractionException: getting exact value of fraction
#Starting lowercase - see CANNOT_PERFORM_OP_FRACTION_MSG
CPOF_NOT_NUMBER_FRACTION_REASON=it's not whole number fraction
#CannotPerformOperationFractionException: dividing with rest
#Starting lowercase - see CANNOT_PERFORM_OP_FRACTION_MSG
CPOF_RDIVIDE_OP=divide with rest
#CannotPerformOperationFractionException: fraction isn't whole number
#Starting lowercase - see CANNOT_PERFORM_OP_FRACTION_MSG
CPOF_RDIVIDE_REASON=fraction hasn't whole numbers
